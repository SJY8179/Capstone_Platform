### 1) 교수 로그인
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "protest@prof.com",
  "password": "000000"
}

> {% client.global.set("accessToken", response.body.accessToken); %}

### 2) (학생/작성권한 계정으로) 과제 생성 → 여기서는 편의상 교수 토큰으로 생성 예시
POST http://localhost:8080/api/projects/1/assignments
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "검토이력-점검용",
  "dueDateIso": "2025-09-20",
  "status": "ONGOING"
}

> {% client.global.set("aid", response.body.id); %}

### 3) 검토요청 (ONGOING → PENDING)
PATCH http://localhost:8080/api/projects/1/assignments/{{aid}}/status?value=PENDING
Authorization: Bearer {{accessToken}}

### 4) 교수 일괄 반려 (메모 포함) — now REJECT
POST http://localhost:8080/api/professor/reviews/bulk
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "action": "REJECT",
  "items": [
    { "assignmentId": {{aid}}, "projectId": 1, "comment": "형식 보완 필요" }
  ]
}

### 5) 다시 교수 일괄 승인 (메모 포함) — now APPROVE
POST http://localhost:8080/api/professor/reviews/bulk
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "action": "APPROVE",
  "items": [
    { "assignmentId": {{aid}}, "projectId": 1, "comment": "최종 승인" }
  ]
}

### 6) 이력 조회 (프론트의 “검토 이력” 탭이 부르는 API)
GET http://localhost:8080/api/professor/reviews/{{aid}}/history
Authorization: Bearer {{accessToken}}