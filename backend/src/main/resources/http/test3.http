### 1) 로그인 (교수 계정) — accessToken 전역 저장
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "email": "protest@prof.com",
  "password": "000000"
}

> {%
    if (response.status === 200) {
        if (!response.body || !response.body.accessToken) {
            throw new Error("로그인 응답에서 accessToken을 찾지 못했습니다.");
        }
        client.global.set("accessToken", response.body.accessToken);
        if (response.body.user && response.body.user.id) {
            client.global.set("profUserId", String(response.body.user.id));
        }
    } else {
        throw new Error("로그인 실패: " + response.status);
    }
%}

### 2) 과제 목록 (현황 확인)
GET http://localhost:8080/api/projects/1/assignments
Authorization: Bearer {{accessToken}}

### 3) 과제 생성 (ONGOING) — 생성한 과제 id 저장
POST http://localhost:8080/api/projects/1/assignments
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "검토요청-테스트",
  "dueDateIso": "2025-09-15",
  "status": "ONGOING"
}

> {%
    if (response.status === 200) {
        if (!response.body || !response.body.id) {
            throw new Error("과제 생성 응답에서 id를 찾지 못했습니다.");
        }
        client.global.set("aid", String(response.body.id));
    } else {
        throw new Error("과제 생성 실패: " + response.status);
    }
%}

### 4) 검토 대기 유입 시뮬레이션 (방금 생성한 과제 PENDING으로 변경)
PATCH http://localhost:8080/api/projects/1/assignments/{{aid}}/status?value=PENDING
Authorization: Bearer {{accessToken}}

### 5) 과제 목록 재확인 (PENDING 변경 여부)
GET http://localhost:8080/api/projects/1/assignments
Authorization: Bearer {{accessToken}}

### 6) 교수 대시보드 요약 확인 (검토 대기 증가/목록 반영)
GET http://localhost:8080/api/dashboard/professor/summary
Authorization: Bearer {{accessToken}}