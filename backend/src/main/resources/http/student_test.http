### ========= 공통 =========
@host = http://localhost:8080/api
@ts = {{$timestamp}}
@teamName_stu = SMOKE-TEAM-STU-{{ts}}
@projTitle_stu = SMOKE-PROJ-STU-{{ts}}
@profEmail = prof1@a.com

### 학생 로그인
POST {{host}}/auth/login
Content-Type: application/json

{ "email": "student1@a.com", "password": "111111" }
> {%
    let d = response.body; if (typeof d === 'string') { try { d = JSON.parse(d) } catch(e) {} }
    client.global.set("studentToken", d.accessToken);
%}

### 학생: 팀 생성(학생은 LEADER로 자동 추가) — 2xx 기대
POST {{host}}/teams
Authorization: Bearer {{studentToken}}
Content-Type: application/json

{ "name": "{{teamName_stu}}", "description": "student smoke" }
> {%
    let d = response.body; if (typeof d === 'string') { try { d = JSON.parse(d) } catch(e) {} }
    if (response.status >= 400) { throw new Error("팀 생성 실패(학생): " + response.status + " " + response.body) }
    client.global.set("teamId_stu", String(d.id));
%}

### 학생: 교수 ID 조회
GET {{host}}/users?q={{profEmail}}&size=5
Authorization: Bearer {{studentToken}}

> {%
  let arr = response.body; if (typeof arr === 'string') { try { arr = JSON.parse(arr) } catch(e) {} }
  const list = Array.isArray(arr) ? arr : [];
  const prof = list.find(u => u.email === "{{profEmail}}");
  if (!prof) { throw new Error("교수를 찾지 못했습니다: {{profEmail}}") }
  client.global.set("profId", String(prof.id));
%}

### 학생(리더): 교수 팀원으로 추가
POST {{host}}/teams/{{teamId_stu}}/members
Authorization: Bearer {{studentToken}}
Content-Type: application/json

{ "userId": {{profId}} }

### 학생: 프로젝트 생성(professor=null)
POST {{host}}/projects
Authorization: Bearer {{studentToken}}
Content-Type: application/json

{ "title": "{{projTitle_stu}}", "teamId": {{teamId_stu}} }
> {%
    let d = response.body; if (typeof d === 'string') { try { d = JSON.parse(d) } catch(e) {} }
    if (response.status >= 400) { throw new Error("프로젝트 생성 실패(학생): " + response.status + " " + response.body) }
    client.global.set("projectId_stu", String(d.id || d.projectId || ""));
%}

### (선택) 교수 로그인 후 내가 볼 수 있는 프로젝트 확인
POST {{host}}/auth/login
Content-Type: application/json

{ "email": "{{profEmail}}", "password": "111111" }
> {%
    let d = response.body; if (typeof d === 'string') { try { d = JSON.parse(d) } catch(e) {} }
    client.global.set("profToken", d.accessToken);
%}

###
GET {{host}}/projects/my
Authorization: Bearer {{profToken}}
